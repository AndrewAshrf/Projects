
/*
Main code (Not used State Machine)
*/

	LCD_VidInitialize();
	KEYPAD_vidInitialize(KPD_PORT);
	welcome();
	while(1)
	{
		u8 LOC_U8Inp=0;
		u8 LOC_U8Y=0, LOC_U8X=0, LOC_U8X2=0, LOC_U8P=0,LOC_U8Com=0;
		f32 LOC_U8Res=0;
		f32 LOC_U8Equation[30]={0};
		f32 LOC_U8Variables[30]={0};
		u8 LOC_U8Z=0,LOC_U8Count=0;
		op:
		while(LOC_U8Inp !='=' )
		{
		LOC_U8Inp=KEYPAD_U8GetPressedKey(KPD_PORT);
		if(LOC_U8Inp ==127){continue;}
		if(LOC_U8Inp==' ' )
		{
			if(LOC_U8Count==16)
				LCD_VidGoToLocation(0,16);
			if(LOC_U8Z==0 && LOC_U8Com==1)
			{
				LOC_U8P=0;
				LOC_U8Equation[LOC_U8P]=0;
				LCD_VidClearData();
				LCD_VidSetDataLocation();
				LOC_U8Com=0,LOC_U8Count=0;
			}
			if(LOC_U8Z==0)
				continue;
			LCD_VidSendCommand(0x10);
			LCD_VidSendData(' ');
			LOC_U8Z--;
			LOC_U8Variables[LOC_U8Z]=0;
			LCD_VidSendCommand(0x10);
			LOC_U8Count--;
			continue;
		}
		LCD_VidSendData(LOC_U8Inp);
		LOC_U8Count++;
		if(LOC_U8Count==16)
		{
			LCD_VidGoToLocation(1,0);
		}
		else if(LOC_U8Count==29)
		{
			LCD_VidClearData();
			LCD_VidSetDataLocation();
			LCD_VidSendDatastring("OVERFLOW");
			_delay_ms(1000);
			LCD_VidClearData();
			LCD_VidSetDataLocation();
			LOC_U8X2=1;
			break;
		}
		LOC_U8Variables[LOC_U8Z++]=LOC_U8Inp;
		}
		if(LOC_U8X2==1){LOC_U8X2=0; continue;}
		if(IsOpperand(LOC_U8Variables[0]) && LOC_U8Com==0)
		{
			LCD_VidGoToLocation(1,11);
			LCD_VidSendDatastring("ERROR");
			_delay_ms(1000);
			LCD_VidClearData();
			LCD_VidSetDataLocation();
			continue;
		}
		if(LOC_U8Com==1)
		{
			LOC_U8P=0;
		}
		for(u8 LOC_U8i=0;LOC_U8i<LOC_U8Z;LOC_U8i++)
		{
			if(IsNum(LOC_U8Variables[LOC_U8i]))
			{
				LOC_U8Variables[LOC_U8i]-='0';
				LOC_U8Equation[LOC_U8P]=LOC_U8Equation[LOC_U8P]*10+LOC_U8Variables[LOC_U8i];
			}
			else if(IsOpperand(LOC_U8Variables[LOC_U8i]) && IsOpperand(LOC_U8Variables[LOC_U8i+1]))
			{
				LCD_VidGoToLocation(1,11);
				LCD_VidSendDatastring("ERROR");
				_delay_ms(1000);
				LCD_VidClearData();
				LCD_VidSetDataLocation();
				LOC_U8X=1;
				break;
			}
			else if(IsOpperand(LOC_U8Variables[LOC_U8i]) && !IsOpperand(LOC_U8Variables[LOC_U8i+1]) && !IsNum(LOC_U8Variables[LOC_U8i+1]))
			{
				LCD_VidGoToLocation(1,11);
				LCD_VidSendDatastring("ERROR");
				_delay_ms(1000);
				LCD_VidClearData();
				LCD_VidSetDataLocation();
				LOC_U8X=1;
				break;
			}
			else if(IsOpperand(LOC_U8Variables[LOC_U8i]))
			{
				LOC_U8P++;
				LOC_U8Equation[LOC_U8P]=LOC_U8Variables[LOC_U8i];
				LOC_U8P++;
			}
		}
		if(LOC_U8X==1){LOC_U8X=0; continue;}
		LOC_U8Y=LOC_U8P/2;
		while(LOC_U8Y)
		{
		for(u8 LOC_U8i=0;LOC_U8i<=LOC_U8P;LOC_U8i++)
		{
			if( LOC_U8Equation[LOC_U8i]=='*' && LOC_U8i%2 !=0)
			{
				LOC_U8Equation[LOC_U8i-1]*=LOC_U8Equation[LOC_U8i+1];
				for(u8 LOC_U8j=LOC_U8i;LOC_U8j<=LOC_U8P;LOC_U8j++)
				{
					LOC_U8Equation[LOC_U8j]=LOC_U8Equation[LOC_U8j+2];
				}
				LOC_U8Y--;
				LOC_U8X=1;
				break;
			}
			else if(LOC_U8Equation[LOC_U8i]=='/' && LOC_U8i%2 !=0)
			{
				if(LOC_U8Equation[LOC_U8i+1]==0)
				{
					LCD_VidGoToLocation(1,11);
					LCD_VidSendDatastring("ERROR");
					_delay_ms(1000);
					LCD_VidClearData();
					LCD_VidSetDataLocation();
					LOC_U8X2=1;
					break;
				}
				LOC_U8Equation[LOC_U8i-1]/=LOC_U8Equation[LOC_U8i+1];
				for(u8 LOC_U8j=LOC_U8i;LOC_U8j<=LOC_U8P;LOC_U8j++)
				{
					LOC_U8Equation[LOC_U8j]=LOC_U8Equation[LOC_U8j+2];
				}
				LOC_U8Y--;
				LOC_U8X=1;
				break;
			}
		}
		if(LOC_U8X2==1){break;}
		if(LOC_U8X==1){LOC_U8X=0; continue;}
		for(u8 LOC_U8i=0;LOC_U8i<=LOC_U8P;LOC_U8i++)
		{
			if(LOC_U8Equation[LOC_U8i]=='+' && LOC_U8i%2 !=0)
			{
				LOC_U8Equation[LOC_U8i-1]+=LOC_U8Equation[LOC_U8i+1];
				for(u8 LOC_U8j=LOC_U8i;LOC_U8j<=LOC_U8P;LOC_U8j++)
				{
					LOC_U8Equation[LOC_U8j]=LOC_U8Equation[LOC_U8j+2];
				}
				LOC_U8Y--;
				break;
			}
			else if(LOC_U8Equation[LOC_U8i]=='-' && LOC_U8i%2 !=0)
			{
				LOC_U8Equation[LOC_U8i-1]-=LOC_U8Equation[LOC_U8i+1];
				for(u8 LOC_U8j=LOC_U8i;LOC_U8j<=LOC_U8P;LOC_U8j++)
				{
					LOC_U8Equation[LOC_U8j]=LOC_U8Equation[LOC_U8j+2];
				}
				LOC_U8Y--;
				break;
			}
		}
		}
		if(LOC_U8X2==1){LOC_U8X2=0; continue;}
		if(LOC_U8Count>9 && LOC_U8Count<16)
		{
			LCD_VidGoToLocation(1,0);
		}
		LOC_U8Res=LOC_U8Equation[0];
		LCD_VidSendDataFloat(LOC_U8Res);
	    _delay_ms(500);

	    while(1)
	    {
	    	LOC_U8Com=0;
	    	LOC_U8Inp=KEYPAD_U8GetPressedKey(KPD_PORT);
	    	if(LOC_U8Inp == ' ')
	    	{
	    		LOC_U8Equation[0]=0;
	    		LCD_VidClearData();
	    		LCD_VidSetDataLocation();
	    		break;
	    	}
	    	else if(IsOpperand(LOC_U8Inp))
	    	{
	    		LCD_VidClearData();
	    		LCD_VidSetDataLocation();
	    		LCD_VidSendDataFloat(LOC_U8Res);
	    		LCD_VidSendData(LOC_U8Inp);
	    		for(u8 LOC_U8i=0;LOC_U8i<LOC_U8Z;LOC_U8i++)
	    		{
	     			LOC_U8Variables[LOC_U8i]=0;
			  	}
	    		LOC_U8Count=1;
	    		if(LOC_U8Res!=(u32)LOC_U8Res)
	    		{
	    			LOC_U8Count+=4;
	    		}
	    		while((u32)LOC_U8Res !=0)
	    		{
	    			LOC_U8Res/=10;
	    			LOC_U8Count++;
	    		}
	    		LOC_U8Com=1;
	    		LOC_U8Z=0;
	    		LOC_U8Variables[LOC_U8Z++]=LOC_U8Inp;
	    		goto op;
	    	}
	    }
	}